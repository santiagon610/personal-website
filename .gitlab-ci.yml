---
default:
  image: registry.coreinfra.cloud/hlv/dockerfiles/hlv-hugo-aws:latest
  tags:
    - kubernetes

variables:
  GIT_SUBMODULE_STRATEGY: recursive
  HUGO_DOWNLOAD_URL: "https://github.com/gohugoio/hugo/releases/download/v0.134.2/hugo_extended_0.134.2_linux-amd64.tar.gz"

stages:
  - lint
  - build
  - deploy

# Lint
lint:yaml:
  image: registry.coreinfra.cloud/hlv/dockerfiles/hlv-linter:latest
  stage: lint
  variables:
    YAMLLINT_CONFIG_FILE: "${CI_PROJECT_DIR}/.gitlab/yamllint.yaml"
  script:
    - "yamllint ."
  only:
    refs:
      - main
      - merge_requests
    changes:
      - "**/*.yaml"
      - "**/*.yml"
  allow_failure: false

# Jobs
.hugo:
  stage: deploy
  before_script:
    - aws sts get-caller-identity
    - hugo version
  script:
    - hugo -b $HUGO_BASE_URL
    - >
      if [ "${CI_COMMIT_BRANCH}" == "${CI_DEFAULT_BRANCH}" ]; then
        echo "üü¢ Current branch is ${CI_COMMIT_BRANCH}"
        echo "üü¢ Default branch is ${CI_DEFAULT_BRANCH}"
        echo "üü¢ Running Hugo deploy"
        hugo deploy --target=${HUGO_DEPLOY_TARGET}
      else
        echo "üü¢ Current branch is ${CI_COMMIT_BRANCH}"
        echo "üü° Default branch is ${CI_DEFAULT_BRANCH}"
        echo "‚ÑπÔ∏è Performing dry run of Hugo"
        hugo deploy --target=${HUGO_DEPLOY_TARGET} --dryRun
      fi

# Build
hugo:s3:
  extends: .hugo
  environment:
    name: prod
    url: https://nicholas.santiago.wtf
  variables:
    HUGO_BASE_URL: "https://nicholas.santiago.wtf"
    HUGO_DEPLOY_TARGET: production
