# section information
section:
  name: Skills
  id: skills
  enable: true
  weight: 2
  showOnNavbar: true

skills:
  - name: Linux
    icon: "/images/sections/skills/linux.png"
    summary: |
      On a day-to-day basis, my containers and servers run varied 
      distributions of Linux. Though I can run just about any desktop
      operating system, Linux is my happy place. Red Hat, Debian, Alpine,
      something else: no worries. Let's do this.

  - name: Git
    icon: "/images/sections/skills/git.png"
    summary: |
      Source control is the foundation of good continuous delivery.
      While most comfortable in GitLab (and using its CI), I'm no
      stranger to GitHub.
    url: "https://git-scm.com/"

  - name: Docker
    icon: "/images/sections/skills/docker.svg"
    summary: |
      It works in my container. It's the 2018 equivalent of "but it
      works on my local," and I'm not even ashamed. Being able to run
      the same exact environment from local, to test, to production - is
      key in ensuring a stable and predictable environment.
    url: "https://www.docker.com/"

  - name: Kubernetes
    icon: "/images/sections/skills/kubernetes.png"
    summary: |
      This site is running on an Nginx container inside a Kubernetes
      cluster, and runs on nearly no resources. The ability to cluster
      applications together to drive efficiency and best spend of compute
      excites me.
    url: "https://kubernetes.io/"

  - name: Amazon Web Services
    icon: "/images/sections/skills/aws.svg"
    summary: |
      Most of my production workloads run in AWS, using its wide variety of
      managed products. Whether I'm using EC2 VMs, an EKS cluster, CloudFront
      distributions in front of S3 storage for static content, AWS usually has
      something to offer me to efficiently deliver my product.
    url: "https://aws.amazon.com/"

  - name: Terraform
    icon: "/images/sections/skills/terraform.png"
    summary: |
      Programmatically building and enforcing state of infrastructure by
      running a simple pipeline is pure and utter magic. This is a huge
      part of why I love Terraform.
    url: "https://terraform.io/"

  - name: Ansible
    icon: "/images/sections/skills/ansible.svg"
    summary: |
      Automate everything. Don't install agents. Ansible made many years of
      working on virtual machines and consuming REST APIs easier, and is still
      one of my favorite tools on the belt.
    url: "https://ansible.com/"

  - name: Python
    icon: "/images/sections/skills/python.svg"
    summary: |
      Admittedly, I'm a noob at any real development language, but Python is the
      one that makes the most sense to me at the moment and the one I'm working
      hardest on learning.
    url: "https://www.python.org/"
